{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { EventEmitter } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let grantsService = /*#__PURE__*/(() => {\n  class grantsService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = environment.apiBaseUrl;\n      this.grants = new BehaviorSubject(this.getGrants());\n      this.newGrants = this.grants.asObservable();\n      this.emit = new EventEmitter();\n    }\n\n    getGrants() {\n      return this.http.get(`${this.apiUrl}/all`);\n    }\n\n    getGrant(id) {\n      return this.http.get(`${this.apiUrl}/find/${id}`);\n    }\n\n    addGrant(data) {\n      return this.http.post(this.apiUrl, data);\n    }\n\n    updateGrant(id, data) {\n      return this.http.put(this.apiUrl + `/${id}`, data);\n    }\n\n    removeGrant(id) {\n      return this.http.delete(this.apiUrl + `/${id}`);\n    }\n\n    getGrantByFarmer(farmer) {\n      var farm = JSON.stringify(farmer);\n      let params = new HttpParams({\n        fromObject: {\n          // idFarmer:  JSON.stringify(1),     \n          age: JSON.stringify(farmer.age),\n          area: JSON.stringify(farmer.area),\n          inKRUS: JSON.stringify(farmer.inKRUS),\n          agricultureIncome: JSON.stringify(farmer.agricultureIncome),\n          mainAnimal: JSON.stringify(farmer.mainAnimal),\n          herdSize: JSON.stringify(farmer.herdSize),\n          crops: JSON.stringify(farmer.crops),\n          hasForest: JSON.stringify(farmer.hasForest),\n          hasKids: JSON.stringify(farmer.hasKids),\n          wantComitments: JSON.stringify(farmer.wantComitments)\n        }\n      });\n      let headers = new HttpParams().set('age', farmer.age).set('area', farmer.area).set('inKRUS', farmer.inKRUS).set('agricultureIncome', farmer.agricultureIncome).set('mainAnimal', farmer.mainAnimal).set('herdSize', farmer.herdSize).set('crops', JSON.stringify(farmer.crops)).set('hasForest', farmer.hasForest).set('hasKids', farmer.hasKids).set('wantComitments', farmer.wantComitments);\n      return this.http.get(`${this.apiUrl}/find/filter/`, {\n        params: params\n      });\n    }\n\n    filter(farmer) {\n      this.emit.emit(farmer);\n      this.grants.next(this.getGrantByFarmer(farmer));\n    }\n\n  }\n\n  grantsService.ɵfac = function grantsService_Factory(t) {\n    return new (t || grantsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  grantsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: grantsService,\n    factory: grantsService.ɵfac,\n    providedIn: 'root'\n  });\n  return grantsService;\n})();","map":null,"metadata":{},"sourceType":"module"}